// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/animal": {
            "get": {
                "description": "Возвращает информацию о животном по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "animals"
                ],
                "summary": "Получение информации о животном",
                "parameters": [
                    {
                        "description": "ID животного",
                        "name": "animal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.GetAnimalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.GetAnimalResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Животное не найдено",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Добавляет новое животное в вольер",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "animals"
                ],
                "summary": "Создание нового животного",
                "parameters": [
                    {
                        "description": "Новое животное",
                        "name": "animal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.AddAnimalRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID нового животного",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет животное из вольера",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "animals"
                ],
                "summary": "Удаление животного",
                "parameters": [
                    {
                        "description": "ID животного",
                        "name": "animal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.DeleteAnimalRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Успешно удалено",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Животное не найдено",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/animal/move": {
            "post": {
                "description": "Перемещает животное в другой вольер",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "animals"
                ],
                "summary": "Перемещение животного в другой вольер",
                "parameters": [
                    {
                        "description": "ID животного и ID нового вольера",
                        "name": "animal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.ChangeEnclosureRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешно перемещено",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Животное или вольер не найдены",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/animals": {
            "get": {
                "description": "Возвращает список всех животных",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "animals"
                ],
                "summary": "Получение всех животных",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.GetAllAnimalsResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/enclosure": {
            "get": {
                "description": "Возвращает вольер по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enclosures"
                ],
                "summary": "Получение вольера по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID вольера",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.GetAllEnclosuresResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Вольер не найден",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Добавляет новый вольер",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enclosures"
                ],
                "summary": "Создание нового вольера",
                "parameters": [
                    {
                        "description": "Данные нового вольера",
                        "name": "enclosure",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.AddEnclosureRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID нового вольера",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет вольер по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enclosures"
                ],
                "summary": "Удаление вольера",
                "parameters": [
                    {
                        "description": "ID вольера",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.DeleteEnclosureRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Вольер удален"
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/enclosures": {
            "get": {
                "description": "Возвращает список всех вольеров",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enclosures"
                ],
                "summary": "Получение всех вольеров",
                "responses": {
                    "200": {
                        "description": "Список вольеров",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/enclosure.Enclosure"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/feeding": {
            "post": {
                "description": "Кормит животное по расписанию",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feeding"
                ],
                "summary": "Кормление животного",
                "parameters": [
                    {
                        "description": "ID животного",
                        "name": "animal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.FeedAnimalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Животное покормлено",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Животное не найдено",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Животное не голодно",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/feeding/schedule": {
            "post": {
                "description": "Добавляет новое расписание кормления для животного",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feeding"
                ],
                "summary": "Создание нового расписания кормления",
                "parameters": [
                    {
                        "description": "Новое расписание кормления",
                        "name": "schedule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.AddFeedingScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID нового расписания",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/feeding/schedule/interval": {
            "put": {
                "description": "Изменяет интервал кормления для расписания",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feeding"
                ],
                "summary": "Изменение интервала кормления",
                "parameters": [
                    {
                        "description": "Изменение интервала кормления",
                        "name": "schedule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.ChangeFeedingIntervalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Интервал кормления изменен",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "animal.Type": {
            "type": "string",
            "enum": [
                "predator",
                "herbivore",
                "bird",
                "aquarium"
            ],
            "x-enum-varnames": [
                "Predator",
                "Herbivore",
                "Bird",
                "Aquarium"
            ]
        },
        "enclosure.Enclosure": {
            "type": "object",
            "properties": {
                "animalCount": {
                    "type": "integer"
                },
                "animalIDs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "animalType": {
                    "$ref": "#/definitions/animal.Type"
                },
                "id": {
                    "type": "integer"
                },
                "maxCapacity": {
                    "type": "integer"
                }
            }
        },
        "http.AddAnimalRequest": {
            "type": "object",
            "properties": {
                "animal_type": {
                    "$ref": "#/definitions/animal.Type"
                },
                "enclosure_id": {
                    "type": "integer"
                },
                "favorite_food": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "http.AddEnclosureRequest": {
            "type": "object",
            "properties": {
                "animal_type": {
                    "description": "Тип животного\nrequired: true\nenum: predator,herbivore,bird,aquarium\nexample: aquarium",
                    "allOf": [
                        {
                            "$ref": "#/definitions/animal.Type"
                        }
                    ]
                },
                "capacity": {
                    "description": "Вместимость вольера\nrequired: true\nminimum: 1\nexample: 10",
                    "type": "integer"
                }
            }
        },
        "http.AddFeedingScheduleRequest": {
            "type": "object",
            "properties": {
                "animal_id": {
                    "type": "integer"
                },
                "feeding_interval": {
                    "type": "integer"
                },
                "food_type": {
                    "type": "string"
                }
            }
        },
        "http.ChangeEnclosureRequest": {
            "type": "object",
            "properties": {
                "animal_id": {
                    "type": "integer"
                },
                "enclosure_id": {
                    "type": "integer"
                }
            }
        },
        "http.ChangeFeedingIntervalRequest": {
            "type": "object",
            "properties": {
                "feeding_interval": {
                    "type": "integer"
                },
                "schedule_id": {
                    "type": "integer"
                }
            }
        },
        "http.DeleteAnimalRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "http.DeleteEnclosureRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID вольера\nrequired: true\nexample: 1",
                    "type": "integer"
                }
            }
        },
        "http.FeedAnimalRequest": {
            "type": "object",
            "properties": {
                "animal_id": {
                    "type": "integer"
                },
                "food": {
                    "type": "string"
                }
            }
        },
        "http.GetAllAnimalsResponse": {
            "type": "object",
            "properties": {
                "animals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/http.GetAnimalResponse"
                    }
                }
            }
        },
        "http.GetAllEnclosuresResponse": {
            "type": "object",
            "properties": {
                "animal_count": {
                    "type": "integer"
                },
                "animal_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "animal_type": {
                    "$ref": "#/definitions/animal.Type"
                },
                "id": {
                    "type": "integer"
                },
                "max_capacity": {
                    "type": "integer"
                }
            }
        },
        "http.GetAnimalRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "http.GetAnimalResponse": {
            "type": "object",
            "properties": {
                "animal_type": {
                    "$ref": "#/definitions/animal.Type"
                },
                "enclosure_id": {
                    "type": "integer"
                },
                "favorite_food": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
